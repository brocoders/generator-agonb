#!/bin/bash
cd /home/ec2-user/node-js-app
mkdir -p log

. ~/.nvm/nvm.sh

npm i -g @nestjs/cli typescript ts-node
npm i

app_name='<%= application_name %>'
database_type='<%= database_type %>'
app_region='us-west-2'

get_ssm_param() {
    param_name=$1
    echo $(aws ssm get-parameter \
        --region ${app_region} \
        --name /${app_name}/${param_name} \
        --with-decryption \
        --query Parameter.Value \
        --output text
    )
}

db_name=$(get_ssm_param "db/name")
db_user=$(get_ssm_param "db/user")
db_password=$(get_ssm_param "db/password")
db_host=$(get_ssm_param "db/host")
s3_name=$(get_ssm_param "s3/name")
s3_base_url=$(get_ssm_param "s3/domain")
user_access_key_id=$(get_ssm_param "iam/access-key-id")
user_secret_access_key=$(get_ssm_param "iam/secret-access-key")

[ -f production.env ] && rm production.env || echo production.env is not exists yet

echo DATABASE_NAME=$db_name >> production.env
echo DATABASE_USERNAME=$db_user >> production.env
echo DATABASE_PASSWORD=$db_password >> production.env
echo DATABASE_HOST=$db_host >> production.env
echo NODE_ENV=production >> production.env
echo TOKEN_EXPIRATION_HOUR=24 >> production.env
echo DATABASE_SYNCHRONIZE=false >> production.env
echo AUTH_JWT_SECRET=8db1b8d5158b97eb7b54bf002765323c04a5c1be86d34b44548637f6e7a358e160a078390957e5481b069761e8b8c1dcd0489cb0fa2ab302071d878634878161 >> production.env
echo API_PREFIX=api/v1 >> production.env
echo AUTH_JWT_TOKEN_EXPIRES_IN=3600 >> production.env
echo DATABASE_PORT=5432 >> production.env
echo DATABASE_TYPE=$database_type >> production.env
echo ACCESS_KEY_ID=$user_access_key_id >> production.env
echo SECRET_ACCESS_KEY=$user_secret_access_key >> production.env
echo AWS_DEFAULT_S3_BUCKET=$s3_name >> .env
echo AWS_DEFAULT_S3_URL=$s3_base_url >> .env
echo AWS_S3_REGION=$app_region >> .env

echo Copy project specific variables to production.env
cat .env.custom >> production.env

npm run build
pm2 start npm --no-automation --name $app_name -- run start:prod
